#!/bin/bash
#
#Script to scaffold denovo assembled contigs using a reference sequence
# Uses blastn to map contigs to a reference sequence
#
# Developed by Dr. Sreenu Vattipally
# MRC-University of Glasgow Centre for Virus Research
# University of Glasgow
#
# Usage: contigsMerger ref.fa contigs.fa
#


ARGC=$#  # Number of args, not counting $0

Usage () {
    echo "";
    echo "Usage: contigsMerger reference.fa contigs.fa"
    echo "";
}

if [ $# -eq 0 ]; then Usage; exit 1; fi

cp $2  filteredContigs-$$.fa

if [ $# -eq 3 ]; then
	Nflag=$3;
else 
	Nflag="X";
fi

#formatdb -p F -i $1
#blastall -p blastn -d $1 -i filteredContigs-$$.fa -F F -o Blast-$$.out -m 8 
#
makeblastdb -dbtype nucl -in $1 &> /dev/null
blastn -query filteredContigs-$$.fa -db $1 -out Blast-$$.out -outfmt 6 


awk '$4>500{if($9>$10) print $1,$7,$8,$10,$9,"-"; else print $1,$7,$8,$9,$10,"+";}' Blast-$$.out |\
sort -gk4 |\
awk 'BEGIN{i=start=end=0;}{if(start==$4 && end < $5 ) {contig[i]=$0; start=$4; end=$5;} if(start != $4 && $5 > end) {i++; contig[i]=$0; start=$4;end=$5;}}; END{for(j=1;j<=i;j++) print contig[j];}' |\
awk '{ if(NR==1 && $4==1) {print; end=$5+1}  else if(NR==1 && $4!=1) {print "1 ",$4-1"\n"$0; end=$5+1;} else {if($4>end) {print end,$4-1"\n"$0; end=$5+1;} else if($4<end){if($NF=="+"){newLen=$5-end; print $1,$3-newLen,$3,$5-newLen,$5,"+"}  else {newLen=$5-end; print $1,$2,$2+newLen,$5-newLen,$5,"-"} end=$5+1;} else print}}' > /tmp/contig-$$.txt

echo ""
echo "Filling Gaps..."
awk 'NF==2' /tmp/contig-$$.txt
echo ""

refLen=$(grep -v ">" $1|tr -d "\n"|awk '{print length($1)}');
awk 'BEGIN{end=ARGV[2]; delete ARGV[2];}{print}END{if($5 < end) print $5+1,end}' /tmp/contig-$$.txt $refLen > /tmp/contig-2-$$.txt


> combinedContig.fa

exec < /tmp/contig-2-$$.txt

while read line
do

flag=$(echo $line|awk '{print NF}');

if [ $flag -eq 2 ]; then
	s=$(echo $line|awk '{print $1}');
	e=$(echo $line|awk '{print $2}');

# You can fill the gaps with "N" or sequence from the reference genome

if [ $Nflag == "N" ]; then
 	
	for(( i=s; i<e; i++ ))
	do
		echo -n "N" >> combinedContig.fa;
	done

else	
	grep -v \> $1|tr -d '\n'|cut -c $s-$e >> combinedContig.fa
fi

else
	contigStart=$(echo $line |awk '{print $2}');
	contigEnd=$(echo $line |awk '{print $3}'); 

        contigName=$(echo $line |awk '{print $1}');
        strand=$(echo $line |awk '{print $NF}');
	if [ $strand == "-" ]; then
		com=$(echo "awk '{if(\$0~/$contigName/) flag=1; if(\$0~/^>/ && \$0!~/$contigName/ && flag==1) {flag=0;exit} if(flag==1 && \$0!~/$contigName/) print}' filteredContigs-$$.fa|tr -d \"\\n\" |cut -c $contigStart-$contigEnd|rev|tr '[ATGC]' '[TACG]' >> combinedContig.fa");
		eval $com
	else
		com=$(echo "awk '{if(\$0~/$contigName/) flag=1; if(\$0~/^>/ && \$0!~/$contigName/ && flag==1) {flag=0;exit} if(flag==1 && \$0!~/$contigName/) print}' filteredContigs-$$.fa|tr -d \"\\n\" |cut -c $contigStart-$contigEnd >> combinedContig.fa");
		eval $com
	fi

fi

done 

echo ">Combined-contigs" > /tmp/foo-$$.fa
tr -d '\n' < combinedContig.fa | fold -w 70 >> /tmp/foo-$$.fa
mv /tmp/foo-$$.fa combinedContig.fa 
rm /tmp/contig*$$.txt Blast-$$.out $1.nhr $1.nin $1.nsq filteredContigs-$$.fa
